name: Deploy to Cloudflare Pages
on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:  # Allow the workflow to be triggered manually

env:
  CLOUDFLARE_PROJECT_NAME: docs

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Compress _site directory
        run: |
          tar -czf site.tar.gz -C _site .
#      - name: Upload compressed _site as artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: site
#          path: site.tar.gz
      - name: Copy _site to .upload
        run: |
          cp -R _site .upload
      - name: Convert redirects.json to _redirects
        run: |
          jq -r 'to_entries | map("\(.key) \(.value | sub("\\.html$"; "")) 301") | .[]' .upload/redirects.json > .upload/_redirects
          rm .upload/redirects.json
      - name: Delete HTML stub files from jekyll-redirect-from plugin
        run: |
          find .upload -type f -name '*.html' -exec sh -c '
            if grep -q "http-equiv=\"refresh\"" "$1" && ! grep -q "<body" "$1"; then
              echo "Deleting: $1"
              rm "$1"
            fi
          ' sh {} \;
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CLOUDFLARE_PROJECT_NAME }}
          directory: ./.upload
